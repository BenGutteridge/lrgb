out_dir: results
metric_best: f1
wandb:
  use: False # True
  project: gtblueprint
dataset:
  dir: /data/beng/datasets
  format: PyG-COCOSuperpixels
  name: edge_wt_only_coord
  slic_compactness: 10
  task: graph  # Even if COCO is node-level task, this needs to be set as 'graph'
  task_type: classification
  transductive: False
  node_encoder: True
  node_encoder_name: VOCNode+LapPE
  node_encoder_bn: False
  edge_encoder: False
posenc_LapPE:
  enable: True
  eigen:
    laplacian_norm: sym
    eigvec_norm: L2
    max_freqs: 10
  model: DeepSet  # Transformer
  dim_pe: 16
  layers: 2
  n_heads: 4  # Only used when `posenc.model: Transformer`
  raw_norm_type: none
train:
  mode: custom
  batch_size: 32   
  eval_period: 1
  ckpt_period: 100
model:
  type: gnn
  loss_fun: weighted_cross_entropy
gnn:
  head: inductive_node
  layers_pre_mp: 0
  layers_mp: 8
  layers_post_mp: 3
  dim_inner: 220
  layer_type: my_gcnconv # gcnconv
  stage_type: delay_gnn # stack 
  batchnorm: True
  act: relu
  dropout: 0.0
  agg: mean
  normalize_adj: False
optim:
  optimizer: adamW
  weight_decay: 0.0
  base_lr: 0.0005
  max_epoch: 500
  scheduler: reduce_on_plateau
  reduce_factor: 0.5
  schedule_patience: 10
  min_lr: 1e-5
tensorboard_each_run: False
tensorboard_agg: True